{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","BrowserRouter","className","Container","Navbar","bg","expand","Brand","Link","to","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","Item","Divider","Form","inline","FormControl","type","placeholder","Button","variant","Row","Col","Route","exact","path","component","Home","About","Linkcode1","Linkcode2","Action","Action1","Action2","Action3","Component","App_Picture","src","Picture","Media","width","height","this","props","alt","Body","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a6e14d41.chunk.js","sourcesContent":["import {BrowserRouter as Router,Route,Link} from 'react-router-dom';\nimport React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport {Container,Col,Row,Nav,Navbar,NavDropdown,Button,Form,FormControl,Media} from 'react-bootstrap';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n      <div className=\"App\">\n      \n      <Container>\n      <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand><Link to=\"/\">Home</Link></Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link ><Link to=\"/about\">About</Link></Nav.Link>\n                <Nav.Link ><Link to=\"/link1\">Link1</Link></Nav.Link>\n                <Nav.Link ><Link to=\"/link2\">Link2</Link></Nav.Link>\n                <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                  <NavDropdown.Item><Link to=\"/action\">Action 1</Link></NavDropdown.Item>\n                  <NavDropdown.Item><Link to=\"/action1\">Action 2</Link></NavDropdown.Item>\n                  <NavDropdown.Item><Link to=\"/action2\">Something</Link></NavDropdown.Item>\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item><Link to=\"/action3\">Separated link</Link></NavDropdown.Item>\n                </NavDropdown>\n              </Nav>\n              <Form inline>\n                <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                <Button variant=\"outline-success\">Search</Button>\n              </Form>\n          </Navbar.Collapse>\n          </Navbar>\n          <Row>\n            <Col>\n            <Route exact path=\"/\" component={Home}></Route>\n            <Route  path=\"/about\" component={About}></Route>\n            <Route path=\"/link1\" component={Linkcode1}></Route>\n            <Route path=\"/link2\" component={Linkcode2}></Route>\n            <Route exact path=\"/action\" component={Action}></Route>\n            <Route  path=\"/action1\" component={Action1}></Route>\n            <Route  path=\"/action2\" component={Action2}></Route>\n            <Route  path=\"/action3\" component={Action3}></Route>\n            </Col>\n          </Row>\n        </Container></div> \n        </Router> )\n    }\n}\n\nexport default App;\nconst Home = ()=>(\n  <Col>\n  <div><h2>This is a Home page created by me. It is totally based on react-js.</h2></div>\n  {/* <Picture></Picture> */}\n  </Col>\n);\nconst About = ()=>(\n  <div><h1>This is a About page</h1><br/><br/>\n  <h6>\n\nStarted several mistake joy say painful removed reached end. State burst think end are its. Arrived off she elderly beloved him affixed noisier yet. An course regard to up he hardly. View four has said does men saw find dear shy. Talent men wicket add garden. \n  </h6>\n  </div>\n);\nconst Linkcode1 = () =>(\n  <div>\n  <div><h1>This is an link 1 page.</h1></div>\n  <Picture src=\"https://images.unsplash.com/photo-1532274402911-5a369e4c4bb5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\"></Picture>\n  </div>);\nconst Linkcode2 = () =>(\n  <div>\n  <div><h1>This is an link 2 page.</h1></div>\n  <Picture src=\"https://images.pexels.com/photos/40784/drops-of-water-water-nature-liquid-40784.jpeg\"></Picture></div>\n);\nconst Action =()=>(\n  <div><h1>This is an action page.</h1>\n <Picture src=\"https://images.pexels.com/photos/189349/pexels-photo-189349.jpeg\" />\n  </div>\n);\nconst Action1 =()=>(\n  <div><h1>\n    This is an action 1 page.\n    </h1>  \n    <Picture src=\"https://images.pexels.com/photos/66258/staniel-cay-swimming-pig-seagull-fish-66258.jpeg\"/></div>\n);\nconst Action2 =()=>(\n  <div><h1>\n    This is an action 2 page.\n    </h1> \n    <Picture src=\"https://images.pexels.com/photos/847393/pexels-photo-847393.jpeg\"/></div>\n);\nconst Action3 =()=>(\n  <div><h1>\n    This is an action 3 page.\n    </h1>\n    <Picture src=\"https://images.pexels.com/photos/64219/dolphin-marine-mammals-water-sea-64219.jpeg\"/></div>\n)\n\nclass Picture extends Component{\n  render(){\n    return(\n<Media>\n<img\n    width={200}\n    height={200}\n    className=\"mr-3\"\n    src={this.props.src}\n    alt=\"Generic placeholder\"\n  />\n  {/* <Imgsource src=\"https://images.unsplash.com/photo-1532274402911-5a369e4c4bb5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\" /> */}\n  <Media.Body>\n    <h5>Landscape Pictures</h5>\n    <p>\n      Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque\n      ante sollicitudin commodo. Cras purus odio, vestibulum in vulputate at,\n      tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla.\n      Donec lacinia congue felis in faucibus.\n    </p>\n  </Media.Body>\n</Media>\n    )\n  }\n}\n// class Imgsource extends Component{\n// render(){\n//   return(\n// <img\n//     width={200}\n//     height={200}\n//     className=\"mr-3\"\n//     src={this.props.src}\n//     alt=\"Generic placeholder\"\n//   />\n//   )\n// }\n// }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}